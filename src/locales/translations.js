export const translations = {
  heroSection: {
    imgAlt: "hero.imgAlt",
    h2: "hero.h2",
    span: "hero.span",
  },

  searchbar: {
    event: {
      label: "searchbar.event.label",
      placeholder: "searchbar.event.placeholder",
    },
    location: {
      label: "searchbar.location.label",
      placeholder: "searchbar.location.placeholder",
    },
    category: {
      label: "searchbar.category.label",
      placeholder: "searchbar.category.placeholder",
    },
  },

  upcomingOpp: {
    title: "upcomingOpportunities.title",
    discover: "upcomingOpportunities.discoverMore",
    loadingEvents: "upcomingOpportunities.loadingEvents",
    noEvents: "upcomingOpportunities.noEvents",
  },

  onlineOpp: {
    title: "onlineOpportunities.title",
    loadingEvents: "onlineOpportunities.loadingEvents",
    noEvents: "onlineOpportunities.noEvents",
  },

  getToKnowUs: {
    h2: "getToKnowUs.h2",
    description1: "getToKnowUs.description1",
    description2: "getToKnowUs.description2",
    description3: "getToKnowUs.description3",
    imageAlt: "getToKnowUs.imageAlt",
  },

  subscribe: {
    h3: "subscribe.h3",
    p: "subscribe.p",
    emailPH: "subscribe.emailPH",
  },

  footer: {
    information: "footer.information",
    company: "footer.company",
    aboutUs: "footer.aboutUs",
    h2: "footer.h2",
    faq: "footer.faq",
    contact: "footer.contact",
    privacy: "footer.privacy",
    terms: "footer.terms",
    p: "footer.p",
  },

  register: {
    h1: "register.h1",
    accountQuestion: "register.accountQuestion",
    p1: "register.p1",
    p2: "register.p2",
    p3: "register.p3",
    p4: "register.p4",
    p5: "register.p5",
    p6: "register.p6",
    p7: "register.p7",
    createAccount: "register.createAccount",
    creatingAs: "register.creatingAs",
  },

  registerForm: {
    radioIndv: "registerForm.radioIndv",
    radioOrg: "registerForm.radioOrg",
    fullname: "registerForm.fullname",
    orgname: "registerForm.orgname",
    fullnamePH: "registerForm.fullnamePH",
    orgnamePH: "registerForm.orgnamePH",
    email: "registerForm.email",
    emailPH: "registerForm.emailPH",
    password: "registerForm.password",
    passwordPH: "registerForm.passwordPH",
    loading: "registerForm.loading",
    submit: "registerForm.submit",
    haveAccount: "registerForm.haveAccount",
    login: "registerForm.login",
    or: "registerForm.or",
    contGoogle: "registerForm.contGoogle",
    pTerms: "registerForm.pTerms",
    terms: "registerForm.terms",
    pPrivacy: "registerForm.pPrivacy",
    privacy: "registerForm.privacy",
  },

  registerSuccess: {
    emailVerifyAlt: "registerSuccess.emailVerifyAlt",
    h1: "registerSuccess.h1",
    p1: "registerSuccess.p1",
    p2: "registerSuccess.p2",
    p3: "registerSuccess.p3",
  },

  login: {
    p1: "login.p1",
    p2: "login.p2",
    p3: "login.p3",
    p4: "login.p4",
    p5: "login.p5",
    p6: "login.p6",
    p7: "login.p7",
    signIn: "login.signIn",
  },

  loginForm: {
    email: "loginForm.email",
    emailPH: "loginForm.emailPH",
    password: "loginForm.password",
    passwordPH: "loginForm.passwordPH",
    forgot: "loginForm.forgot",
    loading: "loginForm.loading",
    login: "loginForm.login",
    haveAccount: "loginForm.haveAccount",
    signUp: "loginForm.signUp",
    or: "loginForm.or",
    contGoogle: "loginForm.contGoogle",
  },

  password: {
    forgotPassForm: {
      backToLogin: "password.forgotPassForm.backToLogin",
      logoAlt: "password.forgotPassForm.logoAlt",
      forgotPassword: "password.forgotPassForm.forgotPassword",
      forgotDesc: "password.forgotPassForm.forgotDesc",
      email: "password.forgotPassForm.email",
      emailPH: "password.forgotPassForm.emailPH",
      submit: "password.forgotPassForm.submit",
      dontHave: "password.forgotPassForm.dontHave",
      signUp: "password.forgotPassForm.signUp",
    },
    resetPassForm: {
      backToLogin: "password.resetPassForm.backToLogin",
      logoAlt: "password.resetPassForm.logoAlt",
      resetPassword: "password.resetPassForm.resetPassword",
      resetDesc: "password.resetPassForm.resetDesc",
      newPassword: "password.resetPassForm.newPassword",
      newPasswordPH: "password.resetPassForm.newPasswordPH",
      confirmPassword: "password.resetPassForm.confirmPassword",
      confirmPasswordPH: "password.resetPassForm.confirmPasswordPH",
      reset: "password.resetPassForm.reset",
    },
    verificationForm: {
      didntRecive: "password.verificationForm.didntRecive",
      timerMsg: "password.verificationForm.timerMsg",
      backToLogin: "password.verificationForm.backToLogin",
      logoAlt: "password.verificationForm.logoAlt",
      verification: "password.verificationForm.verification",
      verifyDesc: "password.verificationForm.verifyDesc",
      verify: "password.verificationForm.verify",
      resend: "password.verificationForm.resend",
    },
  },

  profile: {
    memberSince: "profile.memberSince",
    edit: "profile.edit",
    attendedEvents: "profile.attendedEvents",
    createdEvents: "profile.createdEvents",
    loading: "profile.loading",
    interests: "profile.interests",
    aboutMe: "profile.aboutMe",
    aboutUs: "profile.aboutUs",
    documents: "profile.documents",
    medals: {
      goldenHeart: "profile.medals.goldenHeart",
      silverMedal: "profile.medals.silverMedal",
      bronzeMedal: "profile.medals.bronzeMedal",
      newVolunteer: "profile.medals.newVolunteer",
      goldenInfo: "profile.medals.goldenInfo",
      silverInfo: "profile.medals.silverInfo",
      bronzeInfo: "profile.medals.bronzeInfo",
    },
    avatarAlt: "profile.avatarAlt",
    logoAlt: "profile.logoAlt",
    eventImageAlt: "profile.eventImgAlt",
  },

  userSettings: {
    avatarAlt: "userSettings.avatarAlt",
    edit: "userSettings.edit",
    welcome: "userSettings.welcome",
    profile: "userSettings.profile",
    security: "userSettings.security",
    visibility: "userSettings.visibility",
  },

  addNewDoc: {
    newDoc: "addNewDoc.newDocument",
    docTitle: "addNewDoc.documentTitle",
    reset: "addNewDoc.buttonReset",
    addNew: "addNewDoc.buttonAddNew",
    cancel: "addNewDoc.cancel",
    save: "addNewDoc.save",
    placeholder: "addNewDoc.placeholder",
  },

  avatarEdit: {
    networkError: "avatarEdit.networkError",
    photoAlert: "avatarEdit.photoAlert",
    photoError: "avatarEdit.photoError",
    loading: "avatarEdit.loading",
    logo: "avatarEdit.logo",
    profilePhoto: "avatarEdit.profilePhoto",
    avatarAlt: "avatarEdit.avatarAlt",
    addPhoto: "avatarEdit.addPhoto",
    delete: "avatarEdit.delete",
  },

  delModal: {
    accountTitle: "delModal.account-title",
    accountDesc: "delModal.account-desc",
    documentTitle: "delModal.document-title",
    documentDesc: "delModal.document-desc",
    conversationTitle: "delModal.conversation-title",
    conversationDesc: "delModal.conversation-desc",
    cancelButton: "delModal.cancelButton",
    delButton: "delModal.delButton",
    deleteEventDesc: "delModal.deleteEventDesc",
    leaveButton: "delModal.leaveButton",
    leaveEvent: "delModal.leaveEvent",
    leaveEventDesc: "delModal.leaveEventDesc",
  },

  indvSettings: {
    success: "indvSettings.success",
    catchError: "indvSettings.catchError",
    elseError: "indvSettings.elseError",
    h1: "indvSettings.h1",
    p1: "indvSettings.p1",
    p2: "indvSettings.p2",
    label1: "indvSettings.label1",
    label1PH: "indvSettings.label1PH",
    label2: "indvSettings.label2",
    label2PH: "indvSettings.label2PH",
    label3: "indvSettings.label3",
    label3PH: "indvSettings.label3PH",
    male: "indvSettings.male",
    female: "indvSettings.female",
    notSay: "indvSettings.notSay",
    label4: "indvSettings.label4",
    label5: "indvSettings.label5",
    label5PH: "indvSettings.label5PH",
    label4PH: "indvSettings.label4PH",
    label6: "indvSettings.label6",
    label6PH: "indvSettings.label6PH",
    label7: "indvSettings.label7",
    label10: "orgSettings.label10",
    edit: "indvSettings.edit",
    save: "indvSettings.save",
    reset: "indvSettings.reset",
  },

  myDocs: {
    alertSuccess: "myDocs.alertSuccess",
    alertError: "myDocs.alertError",
    h2: "myDocs.h2",
    p: "myDocs.p",
    addNew: "myDocs.addNew",
    delete: "myDocs.delete",
    update: "myDocs.update",
    cancel: "myDocs.cancel",
    saveChanges: "myDocs.saveChanges",
  },

  orgSettings: {
    handleErrorMsg: "orgSettings.handleErrorMsg",
    successMsg: "orgSettings.successMsg",
    errorMsg: "orgSettings.errorMsg",
    h1: "orgSettings.h1",
    label1: "orgSettings.label1",
    label1PH: "orgSettings.label1PH",
    label2: "orgSettings.label2",
    label2PH: "orgSettings.label2PH",
    label3: "orgSettings.label3",
    label3PH: "orgSettings.label3PH",
    label4: "orgSettings.label4",
    label4PH: "orgSettings.label4PH",
    label5: "orgSettings.label5",
    label5PH: "orgSettings.label5PH",
    label6: "orgSettings.label6",
    label6PH: "orgSettings.label6PH",
    label7: "orgSettings.label7",
    label7PH: "orgSettings.label7PH",
    label8: "orgSettings.label8",
    label8PH: "orgSettings.label8PH",
    label9: "orgSettings.label9",
    label9PH: "orgSettings.label9PH",
    files: "orgSettings.files",
    label10: "orgSettings.label10",
    edit: "orgSettings.edit",
    save: "orgSettings.save",
  },

  newEventValidation: {
    nameRequired: "newEventValidation.nameRequired",
    nameMin: "newEventValidation.nameMin",
    dateRequired: "newEventValidation.dateRequired",
    dateInPast: "newEventValidation.dateInPast",
    fromTimeRequired: "newEventValidation.fromTimeRequired",
    toTimeRequired: "newEventValidation.toTimeRequired",
    toTimeLater: "newEventValidation.toTimeLater",
    isOnlineRequired: "newEventValidation.isOnlineRequired",
    streetNameRequired: "newEventValidation.streetNameRequired",
    streetNameInvalid: "newEventValidation.streetNameInvalid",
    streetNumberRequired: "newEventValidation.streetNumberRequired",
    streetNumberInvalid: "newEventValidation.streetNumberInvalid",
    zipCodeRequired: "newEventValidation.zipCodeRequired",
    zipCodeMin: "newEventValidation.zipCodeMin",
    zipCodeMax: "newEventValidation.zipCodeMax",
    zipCodeInvalid: "newEventValidation.zipCodeInvalid",
    cityRequired: "newEventValidation.cityRequired",
    cityInvalid: "newEventValidation.cityInvalid",
    cityMin: "newEventValidation.cityMin",
    countryRequired: "newEventValidation.countryRequired",
    countryInvalid: "newEventValidation.countryInvalid",
    countryMin: "newEventValidation.countryMin",
    categoryRequired: "newEventValidation.categoryRequired",
    categoryMin: "newEventValidation.categoryMin",
    categoryMax: "newEventValidation.categoryMax",
    maxParticipantsRequired: "newEventValidation.maxParticipantsRequired",
    descriptionRequired: "newEventValidation.descriptionRequired",
    descriptionMax: "newEventValidation.descriptionMax",
    isContactPersonAddedRequired: "newEventValidationisContactPersonAddedRequired",
    contactNameRequired: "newEventValidation.contactNameRequired",
    contactNameMin: "newEventValidation.contactNameMin",
    contactEmailInvalid: "newEventValidation.contactEmailInvalid",
    contactEmailRequired: "newEventValidation.contactEmailRequired",
    contactPhoneRequired: "newEventValidation.contactPhoneRequired",
    contactPhoneMin: "newEventValidation.contactPhoneMin",
  },

  pswModal: {
    changePsw: "pswModal.changePsw",
    currPsw: "pswModal.currPsw",
    newPsw: "pswModal.newPsw",
    confirmPsw: "pswModal.confirmPsw",
    cancel: "pswModal.cancel",
    saveChng: "pswModal.saveChng",
  },

  profileSettings: {
    p: "profileSettings.p",
  },

  secSett: {
    feedbackMsg1: "secSett.feedbackMsg1",
    feedbackMsg2: "secSett.feedbackMsg2",
    h1: "secSett.h1",
    name: "secSett.name",
    namePH: "secSett.namePH",
    p1: "secSett.p1",
    orgName: "secSett.orgName",
    orgNamePH: "secSett.orgNamePH",
    email: "secSett.email",
    emailPH: "secSett.emailPH",
    p2: "secSett.p2",
    changePsw: "secSett.changePsw",
    delAccount: "secSett.delAccount",
    delAlert1: "secSett.delAlert1",
    delAlert2: "secSett.delAlert2",
    userRes: "secSett.userRes",
    edit: "secSett.edit",
    save: "secSett.save",
  },
  updateDoc: {
    error: "updateDoc.error",
    h2: "updateDoc.h2",
    h1: "updateDoc.h1",
    reset: "updateDoc.reset",
    selectFile: "updateDoc.selectFile",
    cancel: "updateDoc.cancel",
    update: "updateDoc.update",
  },

  msgMenu: {
    h3: "msgMenu.h3",
    link: "msgMenu.link",
    you: "msgMenu.you",
    announce: "msgMenu.announce",
    noMsg: "msgMenu.noMsg",
  },

  notifMenu: {
    notif: "notifMenu.notif",
    noNotif: "notifMenu.noNotif",
  },

  userMenu: {
    user: "userMenu.user",
    profile: "userMenu.profile",
    adminPanel: "userMenu.adminPanel",
    eventMng: "userMenu.eventMng",
    settings: "userMenu.settings",
    logout: "userMenu.logout",
    login: "userMenu.login",
    register: "userMenu.register",
    light: "userMenu.light",
    dark: "userMenu.dark",
  },

  aboutUs: {
    aboutUs: "aboutUs.aboutUs",
    p1: "aboutUs.p1",
    h2: "aboutUs.h2",
    p2: "aboutUs.p2",
    howItWorks: "aboutUs.howItWorks",
    eventAlt: "aboutUs.imgAlt",
    explore: "aboutUs.explore",
    opportunities: "aboutUs.opportunities",
    p3: "aboutUs.p3",
    join: "aboutUs.join",
    toVolunteer: "aboutUs.toVolunteer",
    p4: "aboutUs.p4",
    make: "aboutUs.make",
    aDifference: "aboutUs.aDifference",
    p5: "aboutUs.p5",
    handsAlt: "aboutUs.handsAlt",
    volunteerium: "aboutUs.volunteerium",
    today: "aboutUs.today",
    p6: "aboutUs.p6",
    p7: "aboutUs.p7",
    p8: "aboutUs.p8",
    p9: "aboutUs.p9",
    volCardP1: "aboutUs.volCardP1",
    volCardP2: "aboutUs.volCardP2",
    orgCardP1: "aboutUs.orgCardP1",
    orgCardP2: "aboutUs.orgCardP2",
    eventCardP1: "aboutUs.eventCardP1",
    eventCardP2: "aboutUs.eventCardP2",
  },

  contactUs: {
    p1: "contactUs.p1",
    p2: "contactUs.p2",
    p3: "contactUs.p3",
    p4: "contactUs.p4",
    p5: "contactUs.p5",
    p6: "contactUs.p6",
    p7: "contactUs.p7",
    p8: "contactUs.p8",
    p9: "contactUs.p9",
    h1: "contactUs.h1",
  },

  contactUsForm: {
    name: "contactUsForm.name",
    namePH: "contactUsForm.namePH",
    email: "contactUsForm.email",
    emailPH: "contactUsForm.emailPH",
    subject: "contactUsForm.subject",
    subjectPH: "contactUsForm.subjectPH",
    message: "contactUsForm.message",
    messagePH: "contactUsForm.messagePH",
    messageMaxLength: "contactUsForm.messageMaxLength",
    submit: "contactUsForm.submit",
  },

  faqPage: {
    q1: "faqPage.q1",
    a1: "faqPage.a1",
    q2: "faqPage.q2",
    a2: "faqPage.a2",
    q3: "faqPage.q3",
    a3: "faqPage.a3",
    q4: "faqPage.q4",
    a4: "faqPage.a4",
    q5: "faqPage.q5",
    a5: "faqPage.a5",
    q6: "faqPage.q6",
    a6: "faqPage.a6",
    h1: "faqPage.h1",
    p1: "faqPage.p1",
  },
  eventsPage: {
    sec1: "eventsPage.sec1",
    from: "eventsPage.from",
    to: "eventsPage.to",
    check: "eventsPage.check",
    sec2: "eventsPage.sec2",
    sec3: "eventsPage.sec3",
    new: "eventsPage.new",
    old: "eventsPage.old",
    result: "eventsPage.result",
    notFound: "eventsPage.notFound",
    more: "eventsPage.more",
    event: "eventsPage.event",
    events: "eventsPage.events",
    found: "eventsPage.found",
    filter: "eventsPage.filter",
    loading: "eventsPage.loading",
    people: "eventsPage.people",
    match: "eventsPage.match",
    sort: "eventsPage.sort",
    search: "eventsPage.search",
    location: "eventsPage.location",
    category: "eventsPage.category",
    language: "eventsPage.language",
  },

  googlePassword: {
    header: "googlePassword.header",
    description: "googlePassword.description",
    saveContinue: "googlePassword.saveContinue",
  },

  googleAuthFall: {
    h1: "googleAuthFall.h1",
    h2: "googleAuthFall.h2",
    p1: "googleAuthFall.p1",
    p2: "googleAuthFall.p2",
  },

  googleAS: {
    successMsg: "googleAS.successMsg",
    h1: "googleAS.h1",
    p: "googleAS.p",
  },

  notFound: {
    imgAlt: "notFound.imgAlt",
    p: "notFound.p",
    link: "notFound.link",
  },

  setupIndv: {
    genderLabel1: "setupIndv.genderLabel1",
    genderLabel2: "setupIndv.genderLabel2",
    genderLabel3: "setupIndv.genderLabel3",
    successMsg: "setupIndv.successMsg",
    share: "setupIndv.share",
    p1: "setupIndv.p1",
    ageRange: "setupIndv.ageRange",
    ageRangePH: "setupIndv.ageRangePH",
    gender: "setupIndv.gender",
    genderPH: "setupIndv.genderPH",
    next: "setupIndv.next",
    choose: "setupIndv.choose",
    p2: "setupIndv.p2",
    p3: "setupIndv.p3",
    p4: "setupIndv.p4",
    skip: "setupIndv.skip",
    finish: "setupIndv.finish",
  },

  setupOrg: {
    details: "setupOrg.details",
    p: "setupOrg.p",
    orgDesc: "setupOrg.orgDesc",
    orgDescPH: "setupOrg.orgDescPH",
    orgLogo: "setupOrg.orgLogo",
    nextButton: "setupOrg.nextButton",
    completeh2: "setupOrg.completeh2",
    completeP: "setupOrg.completeP",
    websiteURL: "setupOrg.websiteURL",
    streetName: "setupOrg.streetName",
    streetNamePH: "setupOrg.streetNamePH",
    streetNr: "setupOrg.streetNr",
    zipCode: "setupOrg.zipCode",
    zipCodePH: "setupOrg.zipCodePH",
    city: "setupOrg.city",
    cityPH: "setupOrg.cityPH",
    state: "setupOrg.state",
    statePH: "setupOrg.statePH",
    country: "setupOrg.country",
    countryPH: "setupOrg.countryPH",
    finish: "setupOrg.finish",
  },

  profileCard: {
    attendEvents: "profileCard.attendEvents",
    organizedEvents: "profileCard.organizedEvents",
    p1: "profileCard.p1",
    p2: "profileCard.p2",
    infoAlt: "profileCard.infoAlt",
    joined: "profileCard.joined",
  },

  sidebar: {
    welcome: "sidebar.welcome",
  },

  emailVerify: {
    h1: "emailVerify.h1",
  },

  verifySuccess: {
    h1: "verifySuccess.h1",
    p1: "verifySuccess.p1",
    p2: "verifySuccess.p2",
    p3: "verifySuccess.p3",
    p4: "verifySuccess.p4",
    link: "verifySuccess.link",
  },

  privacyPolicy: {
    h1: "privacyPolicy.h1",
    p1: "privacyPolicy.p1",
    p2: "privacyPolicy.p2",
    p3: "privacyPolicy.p3",
    h2info: "privacyPolicy.h2info",
    p4: "privacyPolicy.p4",
    p5: "privacyPolicy.p5",
    p6: "privacyPolicy.p6",
    p7: "privacyPolicy.p7",
    p8: "privacyPolicy.p8",
    p9: "privacyPolicy.p9",
    p10: "privacyPolicy.p10",
    h2use: "privacyPolicy.h2use",
    li1: "privacyPolicy.li1",
    li2: "privacyPolicy.li2",
    li3: "privacyPolicy.li3",
    li4: "privacyPolicy.li4",
    li5: "privacyPolicy.li5",
    h2share: "privacyPolicy.h2share",
    li6: "privacyPolicy.li6",
    li7: "privacyPolicy.li7",
    li8: "privacyPolicy.li8",
    li9: "privacyPolicy.li9",
    li10: "privacyPolicy.li10",
    li11: "privacyPolicy.li11",
    h2retention: "privacyPolicy.h2retention",
    p11: "privacyPolicy.p11",
    h2security: "privacyPolicy.h2security",
    p12: "privacyPolicy.p12",
    h2rights: "privacyPolicy.h2rights",
    li12: "privacyPolicy.li12",
    li13: "privacyPolicy.li13",
    li14: "privacyPolicy.li14",
    li15: "privacyPolicy.li15",
    li16: "privacyPolicy.li16",
    li17: "privacyPolicy.li17",
    h2changes: "privacyPolicy.h2changes",
    p13: "privacyPolicy.p13",
    h2contact: "privacyPolicy.h2contact",
    p14: "privacyPolicy.p14",
    p15: "privacyPolicy.p15",
    p16: "privacyPolicy.p16",
  },

  langSelect: {
    lang: "langSelect.lang",
    PH: "langSelect.PH",
  },

  eventCardVer: {
    imgAlt: "eventCardVer.imgAlt",
    people: "eventCardVer.people",
    more: "eventCardVer.more",
  },

  eventDetails: {
    backButton: "eventDetails.backButton",
    locationLabel: "eventDetails.locationLabel",
    people: "eventDetails.people",
    attendants: "eventDetails.attendants",
    noAttendants: "eventDetails.noAttendants",
    sendMessageButton: "eventDetails.sendMessageButton",
    joinButton: "eventDetails.joinButton",
    shareFeedbackButton: "eventDetails.shareFeedbackButton",
    reportEventButton: "eventDetails.reportEventButton",
    pendingButton: "eventDetails.pendingButton",
    approvedButton: "eventDetails.approvedButton",
    rejectedButton: "eventDetails.rejectedButton",
    completedButton: "eventDetails.completedButton",
    maxReacedButton: "eventDetails.maxReacedButton",
    manageButton: "eventDetails.manageButton",
    loginPrompt: "eventDetails.loginPrompt",
    login: "eventDetails.login",
    signUp: "eventDetails.signUp",
    or: "eventDetails.or",
    feedback: {
      h2: "eventDetails.feedback.h2",
      p1: "eventDetails.feedback.p1",
      p2: "eventDetails.feedback.p2",
      placeholder: "eventDetails.feedback.placeholder",
      submit: "eventDetails.feedback.submit",
      cancel: "eventDetails.feedback.cancel",
    },
    report: {
      h2: "eventDetails.report.h2",
      p1: "eventDetails.report.p1",
      reportReason: "eventDetails.report.reportReason",
      placeholder1: "eventDetails.report.placeholder1",
      placeholder2: "eventDetails.report.placeholder2",
      issueLabel: "eventDetails.report.issueLabel",
      submit: "eventDetails.report.submit",
      cancel: "eventDetails.report.cancel",
      option1: "eventDetails.report.option1",
      option2: "eventDetails.report.option2",
      option3: "eventDetails.report.option3",
      option4: "eventDetails.report.option4",
      option5: "eventDetails.report.option5",
      option6: "eventDetails.report.option6",
      option7: "eventDetails.report.option7",
      option8: "eventDetails.report.option8",
      option9: "eventDetails.report.option9",
      option10: "eventDetails.report.option10",
    },
  },

  eventMng: {
    addNew: "eventMng.addNew",
    eventName: "eventMng.eventName",
    eventPhoto: "eventMng.eventPhoto",
    eventDate: "eventMng.eventDate",
    from: "eventMng.from",
    to: "eventMng.to",
    eventLocation: "eventMng.eventLocation",
    eventLocationNonChangable: "eventMng.eventLocationNonChangable",
    virtual: "eventMng.virtual",
    physical: "eventMng.physical",
    strName: "eventMng.strName",
    strNumbr: "eventMng.strNumbr",
    city: "eventMng.city",
    country: "eventMng.country",
    code: "eventMng.code",
    cancel: "eventMng.cancel",
    next: "eventMng.next",
    category: "eventMng.category",
    choose: "eventMng.choose",
    participants: "eventMng.participants",
    max: "eventMng.max",
    desc: "eventMng.desc",
    addContact: "eventMng.addContact",
    name: "eventMng.name",
    email: "eventMng.email",
    phone: "eventMng.phone",
    yes: "eventMng.yes",
    no: "eventMng.no",
    back: "eventMng.back",
    submit: "eventMng.submit",
    messages: {
      messageInput: {
        messagePH1: "eventMng.messages.messageInput.messagePH1",
        messagePH2: "eventMng.messages.messageInput.messagePH2",
        messagePH3: "eventMng.messages.messageInput.messagePH3",
        messagePH4: "eventMng.messages.messageInput.messagePH4",
      },
      messageView: {
        startMsg: "eventMng.messages.messageView.startMsg",
        you: "eventMng.messages.messageView.you",
      },
    },
    messagesComp: {
      noConversations: "eventMng.messagesComp.noConversations",
      loading: "eventMng.messagesComp.loading",
    },
  },

  termsOfService: {
    header: "termsOfService.header",
    publishedDate: "termsOfService.publishedDate",
    date: "termsOfService.date",
    description: "termsOfService.description",
    h2Acceptance: "termsOfService.h2Acceptance",
    pAcceptance: "termsOfService.pAcceptance",
    h2Responsibility: "termsOfService.h2Responsibility",
    pResponsibility: "termsOfService.pResponsibility",
    h2EmailRestriction: "termsOfService.h2EmailRestriction",
    pEmailRestriction: "termsOfService.pEmailRestriction",
    h2Prohibited: "termsOfService.h2Prohibited",
    pProhibited: "termsOfService.pProhibited",
    li1: "termsOfService.li1",
    li2: "termsOfService.li2",
    li3: "termsOfService.li3",
    li4: "termsOfService.li4",
    h2Intellectual: "termsOfService.h2Intellectual",
    pIntellectual: "termsOfService.pIntellectual",
    h2userGenerated: "termsOfService.h2userGenerated",
    pUserGenerated: "termsOfService.pUserGenerated",
    h2Limitation: "termsOfService.h2Limitation",
    pLimitation: "termsOfService.pLimitation",
    h2Changes: "termsOfService.h2Changes",
    pChanges: "termsOfService.pChanges",
    h2Governing: "termsOfService.h2Governing",
    pGoverning: "termsOfService.pGoverning",
    h2Contact: "termsOfService.h2Contact",
    pContact: "termsOfService.pContact",
    vTeam: "termsOfService.vTeam",
    email: "termsOfService.email",
  },

  eventManagement: {
    addNewEvent: "eventManagement.addNewEvent",
    searchInput: "eventManagement.searchInput",
    editButton: "eventManagement.editButton",
    cancelButton: "eventManagement.cancelButton",
    deleteButton: "eventManagement.deleteButton",
    organizedEvents: "eventManagement.organizedEvents",
    upcomingEvents: "eventManagement.upcomingEvents",
    noUpcomingEvents: "eventManagement.noUpcomingEvents",
    yourPastEvents: "eventManagement.yourPastEvents",
    noPastEvents: "eventManagement.noPastEvents",
    attendingEvents: "eventManagement.attendingEvents",
    leaveEventButton: "eventManagement.leaveEventButton",
    acceptButton: "eventManagement.acceptButton",
    rejectButton: "eventManagement.rejectButton",
    loading: "eventManagement.loading",
    removeButton: "eventManagement.removeButton",
    attendants: "eventManagement.attendants",
    noAttendants: "eventManagement.noAttendants",
    joinRequests: "eventManagement.joinRequests",
    participants: "eventManagement.participants",
    no: "eventManagement.no",
    volunteer: "eventManagement.volunteer",
    joining: "eventManagement.joining",
    joined: "eventManagement.joined",
    sidebarLabels: {
      attendingEvents: "eventManagement.sidebarLabels.attendingEvents",
      organizedEvents: "eventManagement.sidebarLabels.organizedEvents",
      messages: "eventManagement.sidebarLabels.messages",
    },
  },

  adminPanel: {
    search: "adminPanel.search",
    addNewInterest: "adminPanel.addNewInterest",
    addNewInterestPH: "adminPanel.addNewInterestPH",
    addNewInterestPHDE: "adminPanel.addNewInterestPHDE",
    interestNameEnglish: "adminPanel.interestNameEnglish",
    interestNameGerman: "adminPanel.interestNameGerman",
    create: "adminPanel.create",
    backButton: "adminPanel.backButton",
    activeUpper: "adminPanel.activeUpper",
    active: "adminPanel.active",
    suspendedUpper: "adminPanel.suspendedUpper",
    suspended: "adminPanel.suspended",
    yes: "adminPanel.yes",
    no: "adminPanel.no",
    cancel: "adminPanel.cancel",

    statistics: {
      statisticsPanel: {
        title: "adminPanel.statistics.statisticsPanel.title",
      },
      statisticsBars: {
        User: "adminPanel.statistics.statisticsBars.users",
        Event: "adminPanel.statistics.statisticsBars.events",
        EventParticipant: "adminPanel.statistics.statisticsBars.eventParticipants",
        EventFeedback: "adminPanel.statistics.statisticsBars.eventFeedbacks",
        EventReport: "adminPanel.statistics.statisticsBars.eventReports",
        Interest: "adminPanel.statistics.statisticsBars.interests",
        Address: "adminPanel.statistics.statisticsBars.addresses",
        Document: "adminPanel.statistics.statisticsBars.documents",
        Contact: "adminPanel.statistics.statisticsBars.contacts",
        Subscription: "adminPanel.statistics.statisticsBars.subscriptions",
        Conversation: "adminPanel.statistics.statisticsBars.conversations",
        Message: "adminPanel.statistics.statisticsBars.messages",
        noStatistics: "adminPanel.statistics.statisticsBars.noStatistics",
      },
    },

    dangerZone: {
      title: "adminPanel.dangerZone.title",
      importantWarning: "adminPanel.dangerZone.importantWarning",
      resetDatabaseWarning: "adminPanel.dangerZone.resetDatabaseWarning",
      databaseResetInfo: "adminPanel.dangerZone.databaseResetInfo",
      databaseResetInfoList: {
        first: "adminPanel.dangerZone.databaseResetInfoList.first",
        second: "adminPanel.dangerZone.databaseResetInfoList.second",
        third: "adminPanel.dangerZone.databaseResetInfoList.third",
      },
      resetDatabaseButton: "adminPanel.dangerZone.resetDatabaseButton",
      resetDatabaseConfirm: "adminPanel.dangerZone.resetDatabaseConfirm",
      invalidCode: "adminPanel.dangerZone.invalidCode",
      sessionExpired: "adminPanel.dangerZone.sessionExpired",
      confirmReset: "adminPanel.dangerZone.confirmReset",
    },

    contacts: {
      contactPanel: {
        title: "adminPanel.contacts.contactPanel.title",
      },
      contactTable: {
        contactId: "adminPanel.contacts.contactTable.contactId",
        contactIdDL: "adminPanel.contacts.contactTable.contactIdDL",
        name: "adminPanel.contacts.contactTable.name",
        nameDL: "adminPanel.contacts.contactTable.nameDL",
        mail: "adminPanel.contacts.contactTable.mail",
        mailDL: "adminPanel.contacts.contactTable.mailDL",
        subject: "adminPanel.contacts.contactTable.subject",
        subjectDL: "adminPanel.contacts.contactTable.subjectDL",
        createdAt: "adminPanel.contacts.contactTable.createdAt",
        createdAtDL: "adminPanel.contacts.contactTable.createdAtDL",
        noContacts: "adminPanel.contacts.contactTable.noContacts",
      },
      singleContactPanel: {
        contactId: "adminPanel.contacts.singleContactPanel.contactId",
        contactInfo: "adminPanel.contacts.singleContactPanel.contactInfo",
        name: "adminPanel.contacts.singleContactPanel.name",
        email: "adminPanel.contacts.singleContactPanel.email",
        createdAt: "adminPanel.contacts.singleContactPanel.createdAt",
        lastUpdatedAt: "adminPanel.contacts.singleContactPanel.lastUpdatedAt",
        contactDetails: "adminPanel.contacts.singleContactPanel.contactDetails",
        subject: "adminPanel.contacts.singleContactPanel.subject",
        message: "adminPanel.contacts.singleContactPanel.message",
        noContacts: "adminPanel.contacts.singleContactPanel.noContacts",
        deleteContact: "adminPanel.contacts.singleContactPanel.deleteContact",
        deleteDescription: "adminPanel.contacts.singleContactPanel.deleteDescription",
      },
    },
    events: {
      eventsPanel: {
        title: "adminPanel.events.eventsPanel.title",
      },
      eventsTable: {
        eventId: "adminPanel.events.eventsTable.eventId",
        eventIdDL: "adminPanel.events.eventsTable.eventIdDL",
        status: "adminPanel.events.eventsTable.status",
        statusDL: "adminPanel.events.eventsTable.statusDL",
        completion: "adminPanel.events.eventsTable.completion",
        completionDL: "adminPanel.events.eventsTable.completionDL",
        completed: "adminPanel.events.eventsTable.completed",
        waiting: "adminPanel.events.eventsTable.waiting",
        eventTitle: "adminPanel.events.eventsTable.eventTitle",
        eventTitleDL: "adminPanel.events.eventsTable.eventTitleDL",
        eventCreator: "adminPanel.events.eventsTable.eventCreator",
        eventCreatorDL: "adminPanel.events.eventsTable.eventCreatorDL",
        attendants: "adminPanel.events.eventsTable.attendants",
        attendantsDL: "adminPanel.events.eventsTable.attendantsDL",
        createdAt: "adminPanel.events.eventsTable.createdAt",
        createdAtDL: "adminPanel.events.eventsTable.createdAtDL",
        noEvents: "adminPanel.events.eventsTable.noEvents",
      },
      singleEventPanel: {
        eventId: "adminPanel.events.singleEventPanel.eventId",
        active: "adminPanel.events.singleEventPanel.active",
        suspended: "adminPanel.events.singleEventPanel.suspended",
        eventDetails: "adminPanel.events.singleEventPanel.eventDetails",
        eventPhotoAlt: "adminPanel.events.singleEventPanel.eventPhotoAlt",
        eventName: "adminPanel.events.singleEventPanel.eventName",
        eventDescription: "adminPanel.events.singleEventPanel.eventDescription",
        eventCreator: "adminPanel.events.singleEventPanel.eventCreator",
        startDate: "adminPanel.events.singleEventPanel.startDate",
        endDate: "adminPanel.events.singleEventPanel.endDate",
        contactName: "adminPanel.events.singleEventPanel.contactName",
        contactEmail: "adminPanel.events.singleEventPanel.contactEmail",
        contactPhone: "adminPanel.events.singleEventPanel.contactPhone",
        languages: "adminPanel.events.singleEventPanel.languages",
        interests: "adminPanel.events.singleEventPanel.interests",
        onlineEvent: "adminPanel.events.singleEventPanel.onlineEvent",
        eventLocation: "adminPanel.events.singleEventPanel.eventLocation",
        documents: "adminPanel.events.singleEventPanel.documents",
        documentId: "adminPanel.events.singleEventPanel.documentId",
        eventParticipants: "adminPanel.events.singleEventPanel.eventParticipants",
        participantId: "adminPanel.events.singleEventPanel.participantId",
        participantIdDL: "adminPanel.events.singleEventPanel.participantIdDL",
        user: "adminPanel.events.singleEventPanel.user",
        userDL: "adminPanel.events.singleEventPanel.userDL",
        joined: "adminPanel.events.singleEventPanel.joined",
        pending: "adminPanel.events.singleEventPanel.pending",
        approved: "adminPanel.events.singleEventPanel.approved",
        rejected: "adminPanel.events.singleEventPanel.rejected",
        notJoined: "adminPanel.events.singleEventPanel.notJoined",
        joinDateDL: "adminPanel.events.singleEventPanel.joinDateDL",
        suspendEvent: "adminPanel.events.singleEventPanel.suspendEvent",
        unsuspendEvent: "adminPanel.events.singleEventPanel.unsuspendEvent",
        status: "adminPanel.events.singleEventPanel.status",
        statusDL: "adminPanel.events.singleEventPanel.statusDL",
        joinDate: "adminPanel.events.singleEventPanel.joinDate",
        noParticipantYet: "adminPanel.events.singleEventPanel.noParticipantYet",
        deleteEvent: "adminPanel.events.singleEventPanel.deleteEvent",
        desc: "adminPanel.events.singleEventPanel.desc",
        noEvent: "adminPanel.events.singleEventPanel.noEvent",
      },
    },
    feedbacks: {
      feedbacksPanel: {
        title: "adminPanel.feedbacks.feedbacksPanel.title",
      },
      feedbacksTable: {
        title: "adminPanel.feedbacks.feedbacksTable.title",
        name: "adminPanel.feedbacks.feedbacksTable.name",
        email: "adminPanel.feedbacks.feedbacksTable.email",
        rating: "adminPanel.feedbacks.feedbacksTable.rating",
        createdAt: "adminPanel.feedbacks.feedbacksTable.createdAt",
        noFeedbacks: "adminPanel.feedbacks.feedbacksTable.noFeedbacks",
      },
      singleFeedbackPanel: {
        feedbackId: "adminPanel.feedbacks.singleFeedbackPanel.feedbackId",
        feedbackInfo: "adminPanel.feedbacks.singleFeedbackPanel.feedbackInfo",
        title: "adminPanel.feedbacks.singleFeedbackPanel.title",
        eventId: "adminPanel.feedbacks.singleFeedbackPanel.eventId",
        email: "adminPanel.feedbacks.singleFeedbackPanel.email",
        name: "adminPanel.feedbacks.singleFeedbackPanel.name",
        createdAt: "adminPanel.feedbacks.singleFeedbackPanel.createdAt",
        lastUpdatedAt: "adminPanel.feedbacks.singleFeedbackPanel.lastUpdatedAt",
        feedbackDetails: "adminPanel.feedbacks.singleFeedbackPanel.feedbackDetails",
        rating: "adminPanel.feedbacks.singleFeedbackPanel.rating",
        feedback: "adminPanel.feedbacks.singleFeedbackPanel.feedback",
        noFeedbacks: "adminPanel.feedbacks.singleFeedbackPanel.noFeedbacks",
        deleteFeedback: "adminPanel.feedbacks.singleFeedbackPanel.deleteFeedback",
        deleteDescription: "adminPanel.feedbacks.singleFeedbackPanel.deleteDescription",
      },
    },
    reports: {
      reportsPanel: {
        title: "adminPanel.reports.reportsPanel.title",
      },
      reportsTable: {
        reportId: "adminPanel.reports.reportsTable.reportId",
        reportType: "adminPanel.reports.reportsTable.reportType",
        reportedBy: "adminPanel.reports.reportsTable.reportedBy",
        reportedByDL: "adminPanel.reports.reportsTable.reportedByDL",
        eventId: "adminPanel.reports.reportsTable.eventId",
        eventIdDL: "adminPanel.reports.reportsTable.eventIdDL",
        createdAt: "adminPanel.reports.reportsTable.createdAt",
        noReports: "adminPanel.reports.reportsTable.noReports",
      },
      singleReportPanel: {
        reportId: "adminPanel.reports.singleReportPanel.reportId",
        reportInfo: "adminPanel.reports.singleReportPanel.reportInfo",
        reportType: "adminPanel.reports.singleReportPanel.reportType",
        reportedBy: "adminPanel.reports.singleReportPanel.reportedBy",
        guest: "adminPanel.reports.singleReportPanel.guest",
        eventId: "adminPanel.reports.singleReportPanel.eventId",
        createdAt: "adminPanel.reports.singleReportPanel.createdAt",
        lastUpdatedAt: "adminPanel.reports.singleReportPanel.lastUpdatedAt",
        reportDetails: "adminPanel.reports.singleReportPanel.reportDetails",
        content: "adminPanel.reports.singleReportPanel.content",
        noReport: "adminPanel.reports.singleReportPanel.noReports",
        deleteReport: "adminPanel.reports.singleReportPanel.deleteReport",
        deleteDescription: "adminPanel.reports.singleReportPanel.deleteDescription",
      },
    },
    subscriptions: {
      subscriptionsPanel: {
        title: "adminPanel.subscriptions.subscriptionsPanel.title",
      },
      subscriptionsTable: {
        subscriptionsId: "adminPanel.subscriptions.subscriptionsTable.subscriptionsId",
        subscriptionsIdDL: "adminPanel.subscriptions.subscriptionsTable.subscriptionsIdDL",
        email: "adminPanel.subscriptions.subscriptionsTable.email",
        subscripedAt: "adminPanel.subscriptions.subscriptionsTable.subscripedAt",
        noSubscriptionsFound: "adminPanel.subscriptions.subscriptionsTable.noSubscriptionsFound",
        deleteSubscription: "adminPanel.subscriptions.subscriptionsTable.deleteSubscription",
        deleteDescription: "adminPanel.subscriptions.subscriptionsTable.deleteDescription",
      },
    },
    interests: {
      interestsPanel: {
        title: "adminPanel.interests.interestsPanel.title",
      },
      interestsTable: {
        interestsId: "adminPanel.interests.interestsTable.interestsId",
        name: "adminPanel.interests.interestsTable.name",
        createdAt: "adminPanel.interests.interestsTable.createdAt",
        updatedAt: "adminPanel.interests.interestsTable.updatedAt",
        actions: "adminPanel.interests.interestsTable.actions",
        noInterestsFound: "adminPanel.interests.interestsTable.noInterestsFound",
        deleteInterest: "adminPanel.interests.interestsTable.deleteInterest",
        deleteDescription: "adminPanel.interests.interestsTable.deleteDescription",
      },
    },
    users: {
      singleUserPanel: {
        userId: "adminPanel.users.singleUserPanel.userId",
        userInformations: "adminPanel.users.singleUserPanel.userInformations",
        fullName: "adminPanel.users.singleUserPanel.fullName",
        orgName: "adminPanel.users.singleUserPanel.orgName",
        userType: "adminPanel.users.singleUserPanel.userType",
        emailAddress: "adminPanel.users.singleUserPanel.emailAddress",
        createdAt: "adminPanel.users.singleUserPanel.createdAt",
        lastUpdatedAt: "adminPanel.users.singleUserPanel.lastUpdatedAt",
        userDetails: "adminPanel.users.singleUserPanel.userDetails",
        fullNameDisplay: "adminPanel.users.singleUserPanel.fullNameDisplay",
        totalPoint: "adminPanel.users.singleUserPanel.totalPoint",
        profileSetup: "adminPanel.users.singleUserPanel.profileSetup",
        emailVerified: "adminPanel.users.singleUserPanel.emailVerified",
        languages: "adminPanel.users.singleUserPanel.languages",
        interests: "adminPanel.users.singleUserPanel.interests",
        address: "adminPanel.users.singleUserPanel.address",
        documents: "adminPanel.users.singleUserPanel.documents",
        documentId: "adminPanel.users.singleUserPanel.documentId",
        noUserFound: "adminPanel.users.singleUserPanel.noUserFound",
        deleteUser: "adminPanel.users.singleUserPanel.deleteUser",
        deleteDescription: "adminPanel.users.singleUserPanel.deleteDescription",
        suspendUser: "adminPanel.users.singleUserPanel.suspendUser",
        unsuspendUser: "adminPanel.users.singleUserPanel.unsuspendUser",
      },
      usersPanel: {
        title: "adminPanel.users.usersPanel.title",
      },
      usersTable: {
        userId: "adminPanel.users.usersTable.userId",
        userIdDL: "adminPanel.users.usersTable.userIdDL",
        status: "adminPanel.users.usersTable.status",
        statusDL: "adminPanel.users.usersTable.statusDL",
        userType: "adminPanel.users.usersTable.userType",
        userTypeDL: "adminPanel.users.usersTable.userTypeDL",
        nameOrg: "adminPanel.users.usersTable.nameOrg",
        nameOrgDL: "adminPanel.users.usersTable.nameOrgDL",
        email: "adminPanel.users.usersTable.email",
        emailDL: "adminPanel.users.usersTable.emailDL",
        nameDL: "adminPanel.users.usersTable.nameDL",
        createdAt: "adminPanel.users.usersTable.createdAt",
        createdAtDL: "adminPanel.users.usersTable.createdAtDL",
        noUsersFound: "adminPanel.users.usersTable.noUsersFound",
      },
    },
  },
  adminPanelPage: {
    eventLabel: "adminPanelPage.eventLabel",
    userLabel: "adminPanelPage.userLabel",
    contactLabel: "adminPanelPage.contactLabel",
    feedbackLabel: "adminPanelPage.feedbackLabel",
    reportLabel: "adminPanelPage.reportLabel",
  },

  yup: {
    required: {
      ageRange: "yup.required.ageRange",
      userType: "yup.required.userType",
      name: "yup.required.name",
      fullName: "yup.required.fullName",
      email: "yup.required.email",
      password: "yup.required.password",
      subject: "yup.required.subject",
      message: "yup.required.message",
      organizationName: "yup.required.organizationName",
      organizationURL: "yup.required.organizationURL",
      streetName: "yup.required.streetName",
      streetNumber: "yup.required.streetNumber",
      zipCode: "yup.required.zipCode",
      city: "yup.required.city",
      country: "yup.required.country",
      oldPassword: "yup.required.oldPassword",
      confirmPassword: "yup.required.confirmPassword",
      reason: "yup.required.reason",
      eventName: "yup.required.eventname",
      date: "yup.required.date",
      startTime: "yup.required.startTime",
      endTime: "yup.required.endTime",
      endShouldLater: "yup.required.endShouldLater",
      streetNameOnline: "yup.required.streetNameOnline",
      category: "yup.required.category",
      participants: "yup.required.participants",
      description: "yup.required.description",
      newDate: "yup.required.newDate",
      onlyNumbers: "yup.required.onlyNumbers",
      onlyLetters: "yup.required.onlyLetters",
      interestId: "yup.required.interestId",
      logo: "yup.required.logo",
      addressId: "yup.required.addressId",
      shortRequired: "yup.required.shortRequired",
    },
    minLength: {
      select1: "yup.minLength.select1",
      phoneNumber: "yup.minLength.phoneNumber",
      totalPoint: "yup.minLength.totalPoint",
      characters1: "yup.minLength.characters1",
      shortCharacters1: "yup.minLength.shortCharacters1",
      characters3: "yup.minLength.characters3",
      shortCharacters3: "yup.minLength.shortCharacters3",
      characters8: "yup.minLength.characters8",
      characters10: "yup.minLength.characters10",
    },
    maxLength: {
      select3: "yup.maxLength.select3",
      characters8: "yup.maxLength.characters8",
      characters15: "yup.maxLength.characters15",
      shortCharacters15: "yup.maxLength.shortCharacters15",
      characters30: "yup.maxLength.characters30",
      characters50: "yup.maxLength.characters50",
      characters100: "yup.maxLength.characters100",
      characters250Bio: "yup.maxLength.characters250Bio",
      characters250: "yup.maxLength.characters250",
      characters1000: "yup.maxLength.characters1000",
    },
    password: {
      containsDigit: "yup.password.containsDigit",
      containsLowercase: "yup.password.containsLowercase",
      containsUppercase: "yup.password.containsUppercase",
      containsSpecialCharacter: "yup.password.containsSpecialCharacter",
      match: "yup.password.match",
    },
    invalid: {
      email: "yup.invalid.email",
      url: "yup.invalid.url",
      invalidFormat: "yup.invalid.invalidFormat",
      shortInvalid: "yup.invalid.shortInvalid"

    },
    oneOf: {
      gender: "yup.oneOf.gender",
      ageRange: "yup.oneOf.ageRange",
      language: "yup.oneOf.language",
    },
  },
  toastify: {
    error: "toastify.error",
    verifyFailError: "toastify.verifyFailError",
    verifySecureError: "toastify.verifySecureError",
    selectFile: "toastify.selectFile",
    selectConversation: "toastify.selectConversation",
    enterMessage: "toastify.enterMessage",
    idMissing: "toastify.idMissing",
    setupProfile: "toastify.setupProfile",
  },
}
